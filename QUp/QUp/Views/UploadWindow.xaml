<Window x:Class="QUp.Views.UploadWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QUp.ViewModels"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Заливка реестра" Height="720" Width="1200" Icon="/Resources/Icon1.ico">

    <Window.DataContext>
        <local:UploadWindowViewModel />
    </Window.DataContext>

    <Window.Resources>

        <Style TargetType="Button" x:Key="TabButtonLast">
            <Setter Property="Background" Value="White" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="7,10,3,0" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7,3,7,3" Background="#999999" BorderBrush="Black" BorderThickness="1,1,.5,.5" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FFADADAD"/>
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style  x:Key="MyLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="120" />
            <Setter Property="Margin" Value="10,10,10,3" />
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="30, 7, 30, 7">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
        </Style>


        <Style  x:Key="MyLowLabelStyle" TargetType="Label" >
            <Setter Property="Padding" Value="120" />
            <Setter Property="Margin" Value="10,10,10,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="7, 3, 7, 3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Border  BorderBrush="Gray" BorderThickness="1" Margin="5" CornerRadius="7,3,7,3">
    
    <Grid Background="White" Margin="0,10,0,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.7*" />
            <ColumnDefinition Width="0.02*" />
            <ColumnDefinition Width="1.3*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height=".1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height=".3*"/>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <!--<Button Grid.Column="0" Grid.Row="0" Command="{Binding RegInitWindowCommand}" Style="{StaticResource TabButtonLast}" ToolTip="Ввод данных реестра." Content="{Binding InitRegButtonText}"></Button>-->

            <Separator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="10,0,10,0" />

            <Grid Grid.Column="0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Command="{Binding AutoUpCommand}" IsEnabled="{Binding ElementName=autoUpcheck, Path=IsChecked }" Style="{StaticResource TabButtonLast}" ToolTip="Запускапет последовательно все задачи." Content="{Binding AutoUpButtonText}"></Button>
            <CheckBox Grid.Column="1" Name="autoUpcheck" IsEnabled="{Binding RegInit}" Margin="3, 10, 3, 3" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="False"></CheckBox>
        </Grid>

        <Button Grid.Column="0" Grid.Row="2" Command="{Binding PredProgCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск предпрограмм." Content="{Binding PredProgButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="3" Command="{Binding CreateBackUpCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Создание копии таблицы." Content="{Binding BackUpButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="4" Command="{Binding SplitAdressCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск программы разбора адресов." Content="{Binding AdrButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="5" Command="{Binding FillTablesCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск процедуры reg_upload.fill_suvd." Content="{Binding FillProjButtonText}"></Button>

        <Grid Grid.Column="0" Grid.Row="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Command="{Binding ChangeCurrencyCommand}" IsEnabled="{Binding ElementName=check, Path=IsChecked }" Style="{StaticResource TabButtonLast}" ToolTip="Запуск процедуры reg_upload.ccy_update." Content="{Binding CcyButtonText}"></Button>
            <CheckBox Grid.Column="1" Name="check" IsEnabled="{Binding RegInit}" IsChecked="{Binding CurNeedToChange}" Margin="3, 10, 3, 3" HorizontalAlignment="Center" VerticalAlignment="Center"></CheckBox>
        </Grid>



        <Button Grid.Column="0" Grid.Row="7" Command="{Binding StepByStepCommand}"  IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск процедуры reg_upload.step_by_step." Content="{Binding StepButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="8" Command="{Binding PostProgCommand}"  IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск постпрограмм." Content="{Binding PostProgButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="9" Command="{Binding FinishCheckCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск процедуры reg_upload.finish_check." Content="{Binding FinishButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="10" Command="{Binding ToArchiveCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск процедуры reg_upload.move_arc_and_lpd." Content="{Binding ArchButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="11" Command="{Binding OktelProgCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск программ заливки телефонов." Content="{Binding OktelButtonText}"></Button>
        <Button Grid.Column="0" Grid.Row="12" Command="{Binding StatusRCommand}" IsEnabled="{Binding RegInit}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск процедуры reg_upload.set_r_status_loop." Content="{Binding RButtonText}"></Button>


        <!--<Label Grid.Row="0" Grid.Column="1" Grid.RowSpan="13" BorderBrush="Gray" BorderThickness="0,0,1,0" Margin="0,10,0,0" Padding="5,0,-5,0"  />-->
            <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan ="13" Orientation="Horizontal" Margin="7,20,0,0">
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>

            <!--<Label Grid.Column="1" Grid.Row="0" Grid.RowSpan="12" Style="{StaticResource MyLabelStyle}" FontFamily="Calibri" FontSize="14" Content="{Binding Path=ResultText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Label.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                </Style>
            </Label.Resources>
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#f2f2f2" Offset="0"/>
                    <GradientStop Color="#999999" Offset="1"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>-->

        <TextBox Name="MainText" Grid.Column="2" Grid.Row="1" Grid.RowSpan="12" BorderBrush="Black" BorderThickness=".5" FontFamily="Calibri" FontSize="16" Margin="10,10,10,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Text="{Binding Path=ResultText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="12,7,12,7"/>
                </Style>
            </TextBox.Resources>
            <TextBox.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#999999" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </TextBox.Background>
        </TextBox>

            <!--<Label Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="3" BorderBrush="Gray" BorderThickness="0,0,0,1"  Margin="13,0,13,0"  />-->
            <Separator Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="3" Margin="13,10,13,0" />
        
            <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="14" BorderBrush="Black" BorderThickness=".5" Margin="10,10,10,0" Style="{StaticResource MyLowLabelStyle}"  FontFamily="Calibri" FontSize="14" Content="{Binding CurrentPath}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            <Label.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
            </Label.Resources>
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#f2f2f2" Offset="1"/>
                    <GradientStop Color="#999999" Offset="0"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>

    </Grid>
    </Border>
</Window>
