<Window x:Class="QUp.MainWindow"         
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QUp"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Подготовка реестра" Height="550" Width="1100" Icon="/Resources/Icon1.ico">

    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>

        <Style TargetType="Button" x:Key="TabButtonLast">
            <Setter Property="Background" Value="White" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="7,10,3,0" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10,3,10,3" Background="#999999" BorderBrush="White" BorderThickness="2,2,1,1" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FFADADAD"/>
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style  x:Key="MyLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="120" />
            <Setter Property="Margin" Value="10,10,10,3" />
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="30, 7, 30, 7">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
                
            </Setter>
        </Style>


        <Style  x:Key="MyLowLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="120" />
            <Setter Property="Margin" Value="10,10,10,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="10, 3, 10, 3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid Background="White" Margin="0,10,0,10">
            <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.7*" />
            <ColumnDefinition Width="1.3*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <Button Grid.Column="0" Grid.Row="0" Command="{Binding InitializeCommand}" Style="{StaticResource TabButtonLast}" ToolTip="Выбор папки в x:\Реєстри заливаемого реестра." >Инициализация</Button>
        <Button Grid.Column="0" Grid.Row="1" Command="{Binding CreateNewFilesCommand}" IsEnabled="{Binding IsInitialize}" Style="{StaticResource TabButtonLast}" ToolTip="Копирование файлов для заливки в x:\Реєстри, а так же файлов *.sql в x:\Progs\Registry из предыдущей папки данного контрагента.">Копирование файлов</Button>
        <Button Grid.Column="0" Grid.Row="2" Command="{Binding SearchCtrlCommand}" IsEnabled="{Binding IsInitialize}" Style="{StaticResource TabButtonLast}" ToolTip="Подбор соответствующего по длинне контрола из предыдущих папок контрагента." >Подбор контрола</Button>
        <Button Grid.Column="0" Grid.Row="3" Command="{Binding CreateCtrlCommand}" IsEnabled="{Binding IsInitialize}" Style="{StaticResource TabButtonLast}" ToolTip="Запуск программы создания контрола.">Создание контрола</Button>
        <Button Grid.Column="0" Grid.Row="4" Command="{Binding GetExcelPosCommand}" IsEnabled="{Binding IsInitialize}" Style="{StaticResource TabButtonLast}" ToolTip="Определение позиции колонки в excel файле по имени поля в контроле.">Позиция поля в Excel</Button>

        <Grid Grid.Column="0" Grid.Row="5" IsEnabled="{Binding IsInitialize}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            
            <TextBox Name="TextBox" Grid.Column="0" Focusable="True" FontFamily="Calibri" FontSize="21" Margin="10,13,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Text="{Binding DealCount, Mode=TwoWay}" ToolTip="Введите количество заливаемых дел">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10,3,10,3"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#999999" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </TextBox.Background>
            </TextBox>

            <Button Grid.Column="1" Command="{Binding CheckCommand}" Style="{StaticResource TabButtonLast}" Margin="3,10,3,0" ToolTip="Проверка корректности данных в файле и соответствия данных контролу.">Предпроверка</Button>
        </Grid>



        <Button Grid.Column="0" Grid.Row="6" IsEnabled="{Binding IsChecked}" Command="{Binding NextCommand}" Style="{StaticResource TabButtonLast}" ToolTip="Переход к заливке реестра.">Далее</Button>

        <Label Grid.Column="1" Grid.Row="0" Grid.RowSpan="7" Style="{StaticResource MyLabelStyle}" FontFamily="Calibri" FontSize="14" Content="{Binding Path=ResultText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Label.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                </Style>
            </Label.Resources>
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#f2f2f2" Offset="0"/>
                    <GradientStop Color="#999999" Offset="1"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>


        <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="7"  Style="{StaticResource MyLowLabelStyle}"  FontFamily="Calibri" FontSize="14" Content="{Binding CurrentPath}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            <Label.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
            </Label.Resources>
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#f2f2f2" Offset="0"/>
                    <GradientStop Color="#999999" Offset="1"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>

    </Grid>
</Window>
